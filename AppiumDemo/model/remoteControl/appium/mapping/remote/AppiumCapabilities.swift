import Foundation

final class AppiumCapabilities: Codable {
    
    let platformName: String
    let platformVersion: String
    let deviceName: String
    let automationName: String
    let takesScreenshot: Bool
    let xcodeOrgId: String // Team ID (unique 10-character string generated by Apple that is assigned to your team) You can  find your team ID listed under the "Organizational Unit" field in your iPhone Developer certificate in your keychain
    let xcodeSigningId: String
    let updatedWDABundleId: String? // Bundle ID of the self-created WebDriverAgentRunner app
    var bundleId: String? // Bundle ID of the app under test. Useful for starting an app on a real device or for using other caps which require the bundle ID during test startup. To run a test on a real device using the bundle ID, you may omit the 'app' capability, but you must provide 'udid'.
    var udid: String? // Device UDID
    var app: String? // The absolute local path or remote http URL to a .ipa file (IOS), .app folder (IOS Simulator)
    
    var webStorageEnabled: Bool?
    var locationContextEnabled: Bool?
    var javascriptEnabled: Bool?
    var databaseEnabled: Bool?
    
    init(platformVersion: String, takesScreenshot: Bool, xcodeOrgId: String, xcodeSigningId: String, updatedWDABundleId: String?) {
        self.platformName = "iOS"
        self.automationName = "XCUITest"
        self.deviceName = "iPhone"
        self.platformVersion = platformVersion
        self.takesScreenshot = takesScreenshot
        self.xcodeOrgId = xcodeOrgId
        self.xcodeSigningId = xcodeSigningId
        self.updatedWDABundleId = updatedWDABundleId
    }
    
    convenience init(platformVersion: String, takesScreenshot: Bool, xcodeOrgId: String, xcodeSigningId: String, updatedWDABundleId: String?, bundleId: String?, udid: String?) {
        self.init(platformVersion: platformVersion, takesScreenshot: takesScreenshot, xcodeOrgId: xcodeOrgId, xcodeSigningId: xcodeSigningId, updatedWDABundleId: updatedWDABundleId)
        self.bundleId = bundleId
        self.udid = udid
    }
    
    convenience init(platformVersion: String, takesScreenshot: Bool, xcodeOrgId: String, xcodeSigningId: String, updatedWDABundleId: String?, app: String?) {
        self.init(platformVersion: platformVersion, takesScreenshot: takesScreenshot, xcodeOrgId: xcodeOrgId, xcodeSigningId: xcodeSigningId, updatedWDABundleId: updatedWDABundleId)
        self.app = app
    }
    
}
